//============================================================================
// Name        : BusStops2.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <algorithm>
using namespace std;
vector <string> BusesForStop(const map<string,vector<string>> &bus_storage, const string &stop) {
	vector <string> stops;
	for (auto &bus: bus_storage) {
		if(find(bus.second.begin(),bus.second.end(),stop) != bus.second.end()) {
			stops.push_back(bus.first);
		}
	}
	return stops;
}

vector <string> BusesForStop(const map<string,vector<string>> &bus_storage, const string &stop, const string &org_bus) {
	vector <string> stops;
	for (auto &bus: bus_storage) {
		if(bus.first != org_bus && find(bus.second.begin(),bus.second.end(),stop) != bus.second.end()) {
			stops.push_back(bus.first);
		}
	}
	return stops;
}

vector<string> AllBuses(const map<string, vector<string>> &bus_storage, const string &bus) {
	vector<string> bus_stops;
	for (auto &stop: bus_storage[bus]) {
		stops.push_back(stop);
	}
	return bus_stops;
}


int main() {
	map<string, vector<string>> bus_storage;
	int Q;
	for (int i = 0; i < Q; i++) {
		string command;
		cin >> command;
		if (command == "NEW_BUS") {
			string bus;
			int stop_count;
			cin >> bus >> stop_count;
			vector <string> stops(stop_count);
			for (auto& stop: stops) {
				cin >> stop;
			}
			bus_storage[bus] = stops;
		} else if (command == "BUSES_FOR_STOP") {
			string stop;
			cin >> stop;
			auto buses = BusesForStop(bus_storage, stop);
			if (buses.size() != 0) {
				for (auto &bus : buses) {
					cout << bus << "";
				}
			} else {
				cout << "No stop";
			}
			cout << endl;
		} else if (command == "STOPS_FOR_BUS bus") {
			string bus;
			cin >> bus;
			if(find(bus_storage.begin(),bus_storage.end(),bus) == bus_storage.end()) {
				cout << "No bus";
			} else {
				for (auto &stop : bus_storage[bus]) {
					auto buses = BusesForStop(bus_storage, stop, bus);
					if (buses.size() == 0) {
						cout << "Stop " << stop << ":" << " no interchange" << endl;
					} else {
						cout << "Stop " << stop << ": ";
						for (auto &bus: buses) {
							cout << bus << " ";
						}
						cout << endl;
					}
				}
			}


		} else {
			for (auto &bus : bus_storage) {
				auto buses = AllBuses(bus_storage,bus.first);
				cout << "Bus " << bus.first << ": ";
				for (auto &bus1: buses) {
					cout << bus1 << " ";
				}
				cout << endl;
			}

		}
	}
	return 0;
}
